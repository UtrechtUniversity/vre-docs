--- 
title: Python Workbench
software:
- Python
- poetry
- miniconda
login:
- desktop
- cli
os_flavor: linux
os:
- Ubuntu 20.04
- Ubuntu 22.04
data:
- ResearchDrive
- irods-icommands
- Yoda Webdav
- iBridges (python)
packages:
- Custom Packages
gpu: false
admin: true
support: UU
---

## Description

This workspace types comes with various Python development tools already installed:

- `pyenv` for managing different python versions
- `miniconda` for managing dependency environments
- `poetry` for an alternative way of running projects with specified dependencies

There are various flavours of this Catalog Item:

- Python Workbench CLI ([login via command line](../../first-steps.qmd#ssh))
- Python Workbench Desktop ([login via desktop](../../first-steps.qmd#browser-access-to-a-desktop-environment))

Simply choose the one that is most convenient to you.

### Tools are installed in userspace

Note that the above tools are installed *separately* for each user in your [CO](../../glossary.qmd#collaboration) that has access to the machine. This means each user can have their own clean `pyenv` and `miniconda` environments.

If you prefer all users on the machine to have a single shared `miniconda` environment, please see the [Miniconda Catalog Item](./miniconda.qmd).

## Creation

{{< include ../partials/_storage.qmd >}}

{{< include ../partials/_creation.qmd >}}

## Access

### Python Workbench CLI

For the Python Workbench CLI (command line) flavour of this Catalog Item, you can [login using SSH](../../first-steps.qmd#ssh).

### Python Workbench Desktop

For the Python Workbench Desktop flavour of this Catalog Item, you can [login using your browser](../../first-steps.qmd#browser-access-to-a-desktop-environment). It is also possible to login via SSH, as described above.

## Usage

The first time (but only the first time) you login to a workspace of this type, the Python tools (`pyenv`, `miniconda` and `poetry`) are installed for your user. This means that at first login you may experience a small delay (~1 minute maximum). During this time, if you are logging in on the command line, you will see that the applications are being installed for you:

```
--- Running install scripts at first login: executing /home/username/runonce.d/01_pyenv-install.sh
--- Running install scripts at first login: executing /home/username/runonce.d/10-poetry.sh
--- Running install scripts at first login: executing /home/username/runonce.d/runonce_conda.sh
```

When you are logged in you can start developing or running code. On the command line, you will have `pyenv`, `miniconda`, and `poetry` available.

By default, `pyenv` will be configured to use the most recent version of Python shipped with the operating system:

```
$ pyenv versions
  system
* system-latest (set by /home/testuser/.pyenv/version)
```

You can use `pyenv` to install and select a different (newer) Python version: e.g. `pyenv install 3.12`, `pyenv global 3.12`. See the [pyenv docs](https://github.com/pyenv/pyenv#usage).

To start using `miniconda` environments, activate `conda` with the command `conda init`. See the [miniconda docs](https://docs.anaconda.com/free/miniconda/).

Also see the [poetry docs](https://python-poetry.org/docs/).

{{< include ../partials/_data_transfer.qmd >}}

The recommended [iBridges client for Yoda and iRODS](../../manuals/ibridges.qmd) is preinstalled.

### Installing additional software

The user has [admin rights](../../responsible-use.qmd#installation-of-software) to install additional software on the system from the terminal.

## Tips

{{< include ../partials/_security.qmd >}}
